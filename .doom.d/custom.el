(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#222222" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1"])
 '(connection-local-criteria-alist
   '(((:application tramp :protocol "flatpak")
      tramp-container-connection-local-default-flatpak-profile)
     ((:application tramp :machine "ghrps-MBP")
      tramp-connection-local-darwin-ps-profile)
     ((:application tramp :machine "localhost")
      tramp-connection-local-darwin-ps-profile)
     ((:application tramp :machine "ghrps-MacBook-Pro.local")
      tramp-connection-local-darwin-ps-profile)
     ((:application tramp)
      tramp-connection-local-default-system-profile tramp-connection-local-default-shell-profile)))
 '(connection-local-profile-alist
   '((tramp-container-connection-local-default-flatpak-profile
      (tramp-remote-path "/app/bin" tramp-default-remote-path "/bin" "/usr/bin" "/sbin" "/usr/sbin" "/usr/local/bin" "/usr/local/sbin" "/local/bin" "/local/freeware/bin" "/local/gnu/bin" "/usr/freeware/bin" "/usr/pkg/bin" "/usr/contrib/bin" "/opt/bin" "/opt/sbin" "/opt/local/bin"))
     (tramp-connection-local-darwin-ps-profile
      (tramp-process-attributes-ps-args "-acxww" "-o" "pid,uid,user,gid,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "-o" "state=abcde" "-o" "ppid,pgid,sess,tty,tpgid,minflt,majflt,time,pri,nice,vsz,rss,etime,pcpu,pmem,args")
      (tramp-process-attributes-ps-format
       (pid . number)
       (euid . number)
       (user . string)
       (egid . number)
       (comm . 52)
       (state . 5)
       (ppid . number)
       (pgrp . number)
       (sess . number)
       (ttname . string)
       (tpgid . number)
       (minflt . number)
       (majflt . number)
       (time . tramp-ps-time)
       (pri . number)
       (nice . number)
       (vsize . number)
       (rss . number)
       (etime . tramp-ps-time)
       (pcpu . number)
       (pmem . number)
       (args)))
     (tramp-connection-local-busybox-ps-profile
      (tramp-process-attributes-ps-args "-o" "pid,user,group,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "-o" "stat=abcde" "-o" "ppid,pgid,tty,time,nice,etime,args")
      (tramp-process-attributes-ps-format
       (pid . number)
       (user . string)
       (group . string)
       (comm . 52)
       (state . 5)
       (ppid . number)
       (pgrp . number)
       (ttname . string)
       (time . tramp-ps-time)
       (nice . number)
       (etime . tramp-ps-time)
       (args)))
     (tramp-connection-local-bsd-ps-profile
      (tramp-process-attributes-ps-args "-acxww" "-o" "pid,euid,user,egid,egroup,comm=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" "-o" "state,ppid,pgid,sid,tty,tpgid,minflt,majflt,time,pri,nice,vsz,rss,etimes,pcpu,pmem,args")
      (tramp-process-attributes-ps-format
       (pid . number)
       (euid . number)
       (user . string)
       (egid . number)
       (group . string)
       (comm . 52)
       (state . string)
       (ppid . number)
       (pgrp . number)
       (sess . number)
       (ttname . string)
       (tpgid . number)
       (minflt . number)
       (majflt . number)
       (time . tramp-ps-time)
       (pri . number)
       (nice . number)
       (vsize . number)
       (rss . number)
       (etime . number)
       (pcpu . number)
       (pmem . number)
       (args)))
     (tramp-connection-local-default-shell-profile
      (shell-file-name . "/bin/sh")
      (shell-command-switch . "-c"))
     (tramp-connection-local-default-system-profile
      (path-separator . ":")
      (null-device . "/dev/null"))))
 '(custom-enabled-themes '(sanityinc-tomorrow-night))
 '(custom-safe-themes
   '("2078837f21ac3b0cc84167306fa1058e3199bbd12b6d5b56e3777a4125ff6851" "06f0b439b62164c6f8f84fdda32b62fb50b6d00e8b01c2208e55543a6337433a" "1b8d67b43ff1723960eb5e0cba512a2c7a2ad544ddb2533a90101fd1852b426e" "82d2cac368ccdec2fcc7573f24c3f79654b78bf133096f9b40c20d97ec1d8016" "628278136f88aa1a151bb2d6c8a86bf2b7631fbea5f0f76cba2a0079cd910f7d" "bb08c73af94ee74453c90422485b29e5643b73b05e8de029a6909af6a3fb3f58" "a569df2702a12e3e1de6fed4adb7319b0f14c71724da9af913ec3359b1e30682" "bd7317d291b811b7f96471327345ac52a02b426877b0243e27b10d6b53e661f8" "dd534bce113f6b0f94f6ce8ea4c193fb349f002248acf9f4a410f1a5e9b9807a" "846b3dc12d774794861d81d7d2dcdb9645f82423565bfb4dad01204fa322dbd5" "08a27c4cde8fcbb2869d71fdc9fa47ab7e4d31c27d40d59bf05729c4640ce834" default))
 '(exwm-floating-border-color "#c5c8c6")
 '(fci-rule-color "#545053")
 '(highlight-tail-colors ((("#e9e9ea") . 0) (("#e9e9ea") . 20)))
 '(ignored-local-variable-values
   '((elisp-lint-indent-specs
      (if-let* . 2)
      (when-let* . 1)
      (let* . defun)
      (nrepl-dbind-response . 2)
      (cider-save-marker . 1)
      (cider-propertize-region . 1)
      (cider-map-repls . 1)
      (cider--jack-in . 1)
      (cider--make-result-overlay . 1)
      (insert-label . defun)
      (insert-align-label . defun)
      (insert-rect . defun)
      (cl-defun . 2)
      (with-parsed-tramp-file-name . 2)
      (thread-first . 0)
      (thread-last . 0))
     (checkdoc-package-keywords-flag)))
 '(jdee-db-active-breakpoint-face-colors (cons "#838083" "#bbbbbb"))
 '(jdee-db-requested-breakpoint-face-colors (cons "#838083" "#d7d5d1"))
 '(jdee-db-spec-breakpoint-face-colors (cons "#838083" "#d7d5d1"))
 '(line-number-mode nil)
 '(objed-cursor-color "#d7d5d1")
 '(package-selected-packages
   '(ef-themes color-theme-sanityinc-tomorrow nano-theme seoul256-theme smudge uuidgen restclient paredit))
 '(pdf-view-midnight-colors (cons "#d7d5d1" "#222222"))
 '(rustic-ansi-faces
   ["#222222" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1" "#d7d5d1"])
 '(safe-local-variable-values
   '((cider-clojure-cli-aliases . "-A:dev:ui")
     (cider-clojure-cli-aliases . "-A:profile")
     (cider-clojure-cli-aliases . "-A:test:pipeline")
     (cider-clojure-cli-aliases . "-A:test:profile:build")
     (cider-clojure-cli-global-options . "-A:test")
     (cider-clojure-cli-aliases . "-A:test:ftr-ui")
     (cider-clojure-cli-aliases . "-A:test")
     (cider-clojure-cli-aliases . "-A:test:build")))
 '(vc-annotate-background "#222222")
 '(vc-annotate-color-map
   (list
    (cons 20 "#d7d5d1")
    (cons 40 "#d7d5d1")
    (cons 60 "#d7d5d1")
    (cons 80 "#d7d5d1")
    (cons 100 "#d7d5d1")
    (cons 120 "#d7d5d1")
    (cons 140 "#d7d5d1")
    (cons 160 "#d7d5d1")
    (cons 180 "#d7d5d1")
    (cons 200 "#d7d5d1")
    (cons 220 "#d7d5d1")
    (cons 240 "#d7d5d1")
    (cons 260 "#d7d5d1")
    (cons 280 "#d7d5d1")
    (cons 300 "#d7d5d1")
    (cons 320 "#d7d5d1")
    (cons 340 "#545053")
    (cons 360 "#545053")))
 '(vc-annotate-very-old-color nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(col-highlight ((t (:background "gray98"))))
 '(font-lock-comment-face ((t (:background "gray96" :foreground "#c5c8c6" :slant normal))))
 '(ts-fold-replacement-face ((t (:foreground nil :box nil :inherit font-lock-comment-face :weight light)))))
(put 'customize-themes 'disabled nil)
(put 'customize-group 'disabled nil)
(put 'narrow-to-region 'disabled nil)
(put 'customize-face 'disabled nil)
